apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    lintOptions {
        abortOnError false
        xmlReport true
        xmlOutput file("lint-results.xml")
        showAll true
        ignoreWarnings false
        warningsAsErrors false
        checkAllWarnings true
        noLines false
    }

    compileSdkVersion project.property("androidCompiledSdkVersion").toInteger()
    buildToolsVersion project.property("selectedBuildToolsVersion")
    project.archivesBaseName = "DinnerTonight"

    defaultConfig {
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true

        // FIXME: Replace the applicationId with an official DinnerTonight app Id.
        // We temporary use this same id from the commerce app for testing purposes.
        applicationId "com.heb.dtn.android"
        minSdkVersion project.property("androidMinSdkVersion").toInteger()
        targetSdkVersion project.property("androidTargetSdkVersion").toInteger()

        testApplicationId "com.heb.dtn.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        signingConfigs {
//            debug {
//                storeFile file("../keystore/debug.keystore")
//            }
//            signingConfigs {
//                release {
//                    storeFile file("TODO")
//                    storePassword "TODO"
//                    keyAlias "TODO"
//                    keyPassword "TODO"
//                }
//            }
//        }
    }

    buildTypes {
        debug {
            debuggable true
            multiDexEnabled true
        }
        release {
            minifyEnabled false
            debuggable false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "5g"
    }
}

ext {
    supportLibraryVersion = '25.3.1'
    playServicesVersion = '11.0.2'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Android support dependencies
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:support-core-ui:$supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:preference-v7:$supportLibraryVersion"
    compile "com.android.support:customtabs:$supportLibraryVersion"
    compile "com.android.support:gridlayout-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.maps.android:android-maps-utils:0.5'
    compile "com.google.android.gms:play-services-location:$playServicesVersion"
    compile "com.google.android.gms:play-services-maps:$playServicesVersion"
    // Barcode scanner
    compile 'me.dm7.barcodescanner:zxing:1.9'
    // DTN modules
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile project(':DinnerTonightFoundation')
}

repositories {
    maven {
        url 'https://maven.google.com'
    }
    mavenCentral()
}

task generateTextInventory() {
    def projectPath = project.projectDir.absolutePath
    def scriptPath = projectPath + "/tools/gentextinv.py"
    def csvPath = projectPath + "/src/main/res/dtn_text_inventory.csv"

    def script = ["python", scriptPath, "--key", "Dev Key", "--value", "Final UX Text", "--value-override", "Android Override", csvPath].execute()
    script.waitFor()

    def stringsFile = new File(projectPath + "/src/main/res/values/strings.xml")
    stringsFile.write(script.text)
}

build.dependsOn(generateTextInventory)
